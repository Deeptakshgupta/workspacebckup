package com.authentication.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCrypt;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {

	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception
	{

		http.csrf(csrf->csrf.disable())
		.authorizeHttpRequests(auth -> auth.anyRequest().authenticated());
		return http.build();
	}

	@Bean 
	public UserDetailsService userDetailsService()
	{
		var uds= new InMemoryUserDetailsManager();//UserDetailsSrevice Object Declare 
		
		// User Object creation 
		var u1= User.withUsername("Pulkit")
				.password("12345")
				.authorities("read")
				.build();
		
		uds.createUser(u1);
		
		return uds;
	}
	@Bean
	public PasswordEncoder passwordEncoder()
	{
		new BCryptPasswordEncoder();
	}
}
