package com.authentication.services;

import java.util.HashSet;
import java.util.Set;

import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.authentication.model.ApplicationUser;
import com.authentication.model.Role;
import com.authentication.repository.RoleRepository;
import com.authentication.repository.UserRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class AuthenticationService {

	private final UserRepository userRepository;
	private final RoleRepository roleRepository;
	private final PasswordEncoder pswdEncoder;
	
	public ApplicationUser registerUser(String username, String password)
	{
		String encodedPassword = pswdEncoder.encode(password);
		
		Role userRole = roleRepository.findByAuthority("USER").get();// get if value is not null then return the value, otherwise throw NoSuchElementFoundException 
		
		Set<Role> authorities = new HashSet<>();
		authorities.add(userRole);
		return userRepository.save(new ApplicationUser(username,encodedPassword,authorities));
	}
	 
	
}
